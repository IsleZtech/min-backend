name: Deploy Min Backend Prod to Lambda

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ECR_REGISTRY: 190623961132.dkr.ecr.ap-northeast-1.amazonaws.com
  ECR_REPOSITORY: islez-min-prod
  AWS_REGION: ap-northeast-1
  ROLE_TO_ASSUME: ${{ secrets.ROLE_TO_ASSUME }}
  LAMBDA_FUNCTION_NAME: islez-min-prod

jobs:
  build:
    name: Deploy to Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log deployment environment
        run: |
          echo "Deployment environment: PROD"


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          role-session-name: GitHubActions-min-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          provenance: false  # Lambdaとの互換性のため無効化

      - name: Update Lambda function
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} \
            --region ${{ env.AWS_REGION }}
          
          echo "Waiting for Lambda function to be updated..."
          aws lambda wait function-updated \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --region ${{ env.AWS_REGION }}
          
          echo "Lambda function updated successfully"
